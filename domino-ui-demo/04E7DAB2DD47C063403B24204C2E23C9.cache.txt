[
"LocalSuggestBoxStore localStore = LocalSuggestBoxStore.create()\n        .addSuggestion(SuggestItem.create(\"Schroeder Coleman\"))\n        .addSuggestion(SuggestItem.create(\"Renee Mcintyre\"))\n        .addSuggestion(SuggestItem.create(\"Casey Garza\"));\nTextBox friendNameBox = TextBox.create(\"Your friend name\")\n        .setHelperText(\"Add friend name as suggestion\");\nKeyboardEvents.listenOn(friendNameBox)\n        .onEnter(evt -> {\n            localStore.addSuggestion(SuggestItem.create(friendNameBox.getValue()));\n            friendNameBox.clear();\n        });\nsuggestBoxCard\n        .setBodyPaddingTop(\"40px\")\n        .appendChild(\n                Row.create()\n                        .appendChild(Column.span6().appendChild(BlockHeader.create(\"Local suggest store\"))))\n        .appendChild(Row.create()\n                .appendChild(Column.span4()\n                        .appendChild(friendNameBox))\n                .appendChild(Column.span2()\n                        .appendChild(Button.createPrimary(Icons.ALL.add()).setContent(\"ADD FRIEND\")\n                                .addClickListener(evt -> {\n                                    localStore.addSuggestion(SuggestItem.create(friendNameBox.getValue()));\n                                    friendNameBox.clear();\n                                })))\n        )\n        .appendChild(\n                Row.create()\n                        .appendChild(Column.span12()\n                                .appendChild(SuggestBox.create(\"Your friends\", localStore)\n                                        .setHelperText(\"Type any letter and see suggestions\")))\n        );\n\n\nSuggestBoxStore dynamicStore = (searchValue, suggestionsHandler) -> {\n    DomGlobal.fetch(\"https://uinames.com/api/?amount=25\")\n            .then(Response::text)\n            .then(json -> {\n                List<SuggestItem> suggestItems = new ArrayList<>();\n                JsArray<JsPropertyMap<String>> randomNames = Js.cast(Global.JSON.parse(json));\n                DomGlobal.console.info(randomNames);\n                for (int i = 0; i < randomNames.length; i++) {\n                    JsPropertyMap<String> nameProperties = randomNames.getAt(i);\n                    if (nameProperties.get(\"name\").toLowerCase().contains(searchValue.toLowerCase())) {\n                        SuggestItem suggestItem = SuggestItem.create(nameProperties.get(\"name\"));\n                        suggestItems.add(suggestItem);\n                    }\n                }\n                suggestionsHandler.onSuggestionsReady(suggestItems);\n                return null;\n            });\n};\n\nsuggestBoxCard\n        .appendChild(Row.create()\n                .appendChild(Column.span12()\n                        .appendChild(BlockHeader.create(\"Dynamic suggest store\"))))\n        .appendChild(Row.create()\n                .appendChild(Column.span12()\n                        .appendChild(SuggestBox.create(\"Dynamic box\", dynamicStore)\n                                .setHelperText(\"Loads new list for every change\"))));",
"tagsInputCard\n    .appendChild(BlockHeader.create(\"FREE TEXT TAGS\", \"Free text tags accept any text value\"))\n    .appendChild(br())\n    .appendChild(br())\n    .appendChild(Row.create()\n            .addColumn(Column.span12()\n                    .appendChild(TagsInput.create(\"Free tag\")\n                            .setPlaceholder(\"Type anything...\")\n                            .setValue(Collections.singletonList(\"Hey! how are you?\"))))\n    );\n\nPerson schroeder_coleman = new Person(1, \"Schroeder Coleman\");\nLocalTagsStore<Person> personsStore = LocalTagsStore.<Person>create()\n    .addItem(\"Schroeder Coleman\", schroeder_coleman)\n    .addItem(\"Renee Mcintyre\", new Person(2, \"Renee Mcintyre\"))\n    .addItem(\"Casey Garza\", new Person(3, \"Casey Garza\"));\n\nTagsInput<Person> objectTags = TagsInput.create(\"Friends\", personsStore);\nobjectTags.setValue(Collections.singletonList(schroeder_coleman));\ntagsInputCard\n    .appendChild(BlockHeader.create(\"SELECT TAGS\", \"Select tags have store of objects to be selected\"))\n    .appendChild(br())\n    .appendChild(br())\n    .appendChild(Row.create()\n            .addColumn(Column.span12()\n                    .appendChild(objectTags\n                            .setPlaceholder(\"Friend's name...\")))\n    );\n\nTagsInput<String> ipAddresses = TagsInput.create(\"IP addresses\");\ntagsInputCard\n    .appendChild(BlockHeader.create(\"TAGS DECORATIONS\", \"Tags input has its own decorations\"))\n    .appendChild(br())\n    .appendChild(br())\n    .appendChild(Row.create()\n            .addColumn(Column.span12()\n                    .appendChild(ipAddresses\n                            .setHelperText(\"Pattern: 000.000.000.000\")\n                            .addValidator(() -> {\n                                List<String> ipAddressesValue = ipAddresses.getValue();\n                                for (String v : ipAddressesValue) {\n                                    if (!new JsRegExp(IP_ADDRESS_REGEX).test(v)) {\n                                        return ValidationResult.invalid(\"Invalid IP address [ \" + v + \" ]\");\n                                    }\n                                }\n                                return ValidationResult.valid();\n                            })\n                            .setValue(Collections.singletonList(\"127.0.0.1\"))\n                            .setPlaceholder(\"Type invalid address...\")\n                            .setAutoValidation(true)\n                    )\n            )\n    )\n    .appendChild(BlockHeader.create(\"READONLY\"))\n    .appendChild(br())\n    .appendChild(br())\n    .appendChild(Row.create()\n            .addColumn(Column.span12()\n                    .appendChild(TagsInput.create(\"Hardware\")\n                            .setValue(Arrays.asList(\"Keyboard\", \"Screen\", \"USB Driver\", \"Mouse\"))\n                            .setReadOnly(true)))\n    );\n\n\ntagsInputCard\n    .appendChild(BlockHeader.create(\"TAGS WITH COLORS\", \"Tags can have colors!\"))\n    .appendChild(br())\n    .appendChild(br())\n    .appendChild(Row.create()\n            .addColumn(Column.span6()\n                    .appendChild(TagsInput.create()\n                            .setPlaceholder(\"Type hardware name...\")\n                            .setValue(Arrays.asList(\"Keyboard\", \"Screen\", \"USB Driver\", \"Mouse\"))\n                            .setTagsColor(ColorScheme.RED)))\n            .addColumn(Column.span6()\n                    .appendChild(TagsInput.create()\n                            .setPlaceholder(\"Type hardware name...\")\n                            .setValue(Arrays.asList(\"Keyboard\", \"Screen\", \"USB Driver\", \"Mouse\"))\n                            .setTagsColor(ColorScheme.TEAL)))\n    ).appendChild(Row.create()\n    .addColumn(Column.span6()\n            .appendChild(TagsInput.create()\n                    .setPlaceholder(\"Type hardware name...\")\n                    .setValue(Arrays.asList(\"Keyboard\", \"Screen\", \"USB Driver\", \"Mouse\"))\n                    .setTagsColor(ColorScheme.CYAN)))\n    .addColumn(Column.span6()\n            .appendChild(TagsInput.create()\n                    .setPlaceholder(\"Type hardware name...\")\n                    .setValue(Arrays.asList(\"Keyboard\", \"Screen\", \"USB Driver\", \"Mouse\"))\n                    .setTagsColor(ColorScheme.BROWN))))\n    .appendChild(Row.create()\n            .addColumn(Column.span6()\n                    .appendChild(TagsInput.create()\n                            .setPlaceholder(\"Type hardware name...\")\n                            .setValue(Arrays.asList(\"Keyboard\", \"Screen\", \"USB Driver\", \"Mouse\"))\n                            .setTagsColor(ColorScheme.AMBER)))\n            .addColumn(Column.span6()\n                    .appendChild(TagsInput.create()\n                            .setPlaceholder(\"Type hardware name...\")\n                            .setValue(Arrays.asList(\"Keyboard\", \"Screen\", \"USB Driver\", \"Mouse\"))\n                            .setTagsColor(ColorScheme.PINK))));A",
"FileUpload fileUpload = FileUpload.create()\n    .setIcon(Icons.ALL.touch_app())\n    .setUrl(\"http://localhost:8080/form\")\n    .multipleFiles()\n    .accept(\"image/*\")\n    .appendChild(Elements.h(3).textContent(\"Drop files here or click to upload.\"))\n    .appendChild(Elements.em().textContent(\"(This is just a demo upload. Selected files are not actually uploaded)\"))\n    .onAddFile(fileItem -> {\n        fileItem.addErrorHandler(request -> {\n            Notification.createDanger(\"Error while uploading \" + request.responseText).show();\n        });\n        fileItem.addSuccessUploadHandler(request -> {\n            Notification.createSuccess(\"File uploaded successfully\").show();\n        });\n        fileItem.addRemoveHandler(file -> {\n            Notification.createInfo(\"File has been removed \" + file.name).show();\n        });\n    });\n\nuploadCard.appendChild(fileUpload);"]