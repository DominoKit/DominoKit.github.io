[
"Slider orderSlider = Slider.create(6);\nSlider flexGrowSlider = Slider.create(10);\nSlider flexShrinkSlider = Slider.create(10);\nTextBox flexBasisTextBox = TextBox.create(\"Flex Basis\").setHelperText(\"Default size of an element before the remaining space is distributed\");\nRadioGroup targetBlockRadioGroup = RadioGroup.create(\"target-block\", \"Target block # to play with\");\nRadioGroup alignSelfRadioGroup = RadioGroup.create(\"align-self\", \"Align self\");\n\nflexItemsCard.setBodyPaddingTop(\"40px\")\n        .appendChild(Row.create()\n                .appendChild(Column.span4()\n                        .appendChild(targetBlockRadioGroup\n                                .appendChild(Radio.create(\"0\", \"1\"))\n                                .appendChild(Radio.create(\"1\", \"2\"))\n                                .appendChild(Radio.create(\"2\", \"3\"))\n                                .appendChild(Radio.create(\"3\", \"4\"))\n                                .appendChild(Radio.create(\"4\", \"5\"))\n                                .horizontal()\n                        )\n                )\n        )\n        .appendChild(Row.create()\n                .appendChild(Column.span4()\n                        .appendChild(orderSlider.withThumb())\n                        .appendChild(h(5).textContent(\"Order\"))\n                )\n                .appendChild(Column.span4()\n                        .appendChild(flexGrowSlider.withThumb())\n                        .appendChild(h(5).textContent(\"Flex Grow\"))\n                )\n                .appendChild(Column.span4()\n                        .appendChild(flexShrinkSlider.withThumb())\n                        .appendChild(h(5).textContent(\"Flex Shrink\"))\n                )\n        )\n        .appendChild(Row.create()\n                .appendChild(Column.span6()\n                        .appendChild(flexBasisTextBox)\n                )\n                .appendChild(Column.span6()\n                        .appendChild(alignSelfRadioGroup\n                                .appendChild(Radio.create(FlexAlign.START.name(), \"Start\"))\n                                .appendChild(Radio.create(FlexAlign.END.name(), \"End\"))\n                                .appendChild(Radio.create(FlexAlign.CENTER.name(), \"Center\"))\n                                .appendChild(Radio.create(FlexAlign.STRETCH.name(), \"Stretch\"))\n                                .appendChild(Radio.create(FlexAlign.BASE_LINE.name(), \"Base line\"))\n                                .horizontal()\n                        )\n                )\n        );\n\nFlexLayout flexLayout = FlexLayout.create()\n        .style()\n        .add(\"demo-flex-layout-container\")\n        .add(\"fill-height\")\n        .get()\n        .setDirection(FlexDirection.LEFT_TO_RIGHT);\n\nMap<String, FlexItem> items = new HashMap<>();\nfor (int i = 0; i < 5; i++) {\n    FlexItem item = FlexItem.create()\n            .style()\n            .add(\"demo-flex-layout-block\")\n            .add(colorOf(i + 1).getBackground())\n            .get()\n            .setAlignSelf(FlexAlign.START)\n            .setOrder(i + 1)\n            .appendChild(h(4));\n    items.put(i + \"\", item);\n    flexLayout.appendChild(item);\n}\n\nflexItemsCard.appendChild(div()\n        .css(\"demo-flex-layout-result-container\")\n        .add(flexLayout)\n        .asElement());\n\n\norderSlider.addSlideHandler(value -> {\n    items.get(targetBlockRadioGroup.getValue())\n            .setOrder((int) value);\n});\n\nflexGrowSlider.addSlideHandler(value -> {\n    items.get(targetBlockRadioGroup.getValue())\n            .setFlexGrow((int) value);\n});\n\nflexShrinkSlider.addSlideHandler(value -> {\n    items.get(targetBlockRadioGroup.getValue())\n            .setFlexShrink((int) value);\n});\n\nalignSelfRadioGroup.addChangeHandler(value -> {\n    items.get(targetBlockRadioGroup.getValue())\n            .setAlignSelf(FlexAlign.valueOf(value.getValue()));\n});\n\nflexBasisTextBox.addChangeHandler(value -> {\n    items.get(targetBlockRadioGroup.getValue())\n            .setFlexBasis(value);\n});\n\ntargetBlockRadioGroup.addChangeHandler(value -> {\n    FlexItem flexItem = items.get(targetBlockRadioGroup.getValue());\n    flexGrowSlider.setValue(flexItem.getFlexGrow());\n    orderSlider.setValue(flexItem.getOrder());\n    flexShrinkSlider.setValue(flexItem.getFlexShrink());\n    flexBasisTextBox.setValue(isNull(flexItem.getFlexBasis()) ? \"\" : flexItem.getFlexBasis());\n    alignSelfRadioGroup.setValue(flexItem.getAlignSelf().name());\n});\n\ntargetBlockRadioGroup.setValue(\"2\");",
"RadioGroup alignItemsRadioGroup = RadioGroup.create(\"align-items\").collapse();\nCheckBox fillHeightCheckBox = CheckBox.create(\"Fill height\");\nRadioGroup directionsRadioGroup = RadioGroup.create(\"direction\");\nRadioGroup justifyContentRadioGroup = RadioGroup.create(\"justify-content\");\n\n// ********* settings part ********* //\nButton addBlockButton = Button.create(\"ADD BLOCK\");\nButton resetButton = Button.create(\"RESET\");\nRadioGroup wrapRadioGroup = RadioGroup.create(\"wrap\", \"Wrap\");\nlayoutPlaygroundCard.setBodyPaddingTop(\"40px\")\n        .appendChild(Row.create()\n                .appendChild(Column.span6()\n                        .appendChild(directionsRadioGroup\n                                .setHelperText(\"Containers inside Flex Layout can have different directions\")\n                                .setLabel(\"Directions\")\n                                .appendChild(Radio.create(FlexDirection.LEFT_TO_RIGHT.name(), \"Left to right\").check())\n                                .appendChild(Radio.create(FlexDirection.RIGHT_TO_LEFT.name(), \"Right to left\"))\n                                .appendChild(Radio.create(FlexDirection.TOP_TO_BOTTOM.name(), \"Top to bottom\"))\n                                .appendChild(Radio.create(FlexDirection.BOTTOM_TO_TOP.name(), \"Bottom to top\"))\n                                .horizontal()\n                        ))\n                .appendChild(Column.span2()\n                        .appendChild(fillHeightCheckBox))\n                .appendChild(Column.span4()\n                        .appendChild(wrapRadioGroup\n                                .appendChild(Radio.create(FlexWrap.NO_WRAP.name(), \"No wrap\").check())\n                                .appendChild(Radio.create(FlexWrap.WRAP_TOP_TO_BOTTOM.name(), \"Wrap top to bottom\"))\n                                .appendChild(Radio.create(FlexWrap.WRAP_BOTTOM_TO_TOP.name(), \"Wrap bottom to top\"))\n                                .horizontal())\n                )\n        )\n        .appendChild(Row.create()\n                .appendChild(Column.span6()\n                        .appendChild(justifyContentRadioGroup\n                                .setHelperText(\"Containers inside Flex Layout can be placed in different ways\")\n                                .setLabel(\"Justify Content\")\n                                .appendChild(Radio.create(FlexJustifyContent.START.name(), \"Start\").check())\n                                .appendChild(Radio.create(FlexJustifyContent.END.name(), \"End\"))\n                                .appendChild(Radio.create(FlexJustifyContent.CENTER.name(), \"Center\"))\n                                .appendChild(Radio.create(FlexJustifyContent.SPACE_BETWEEN.name(), \"Space between\"))\n                                .appendChild(Radio.create(FlexJustifyContent.SPACE_AROUND.name(), \"Space around\"))\n                                .appendChild(Radio.create(FlexJustifyContent.SPACE_EVENLY.name(), \"Space evenly\"))\n                                .horizontal()\n                        ))\n                .appendChild(Column.span6()\n                        .appendChild(alignItemsRadioGroup\n                                .setHelperText(\"Containers inside Flex Layout can be aligned in different ways\")\n                                .setLabel(\"Align items\")\n                                .appendChild(Radio.create(FlexAlign.START.name(), \"Start\"))\n                                .appendChild(Radio.create(FlexAlign.END.name(), \"End\"))\n                                .appendChild(Radio.create(FlexAlign.CENTER.name(), \"Center\"))\n                                .appendChild(Radio.create(FlexAlign.STRETCH.name(), \"Stretch\").check())\n                                .appendChild(Radio.create(FlexAlign.BASE_LINE.name(), \"Base line\"))\n                                .horizontal()\n                        )\n                )\n        )\n        .appendChild(Row.create()\n                .fullSpan(column -> {\n                    column.appendChild(resetButton.linkify().style().add(Styles.pull_right))\n                            .appendChild(addBlockButton.linkify().style().add(Styles.pull_right));\n                })\n        );\n\n// ********* flex layout part ********* //\nFlexLayout flexLayout = FlexLayout.create()\n        .style()\n        .add(\"demo-flex-layout-container\")\n        .get()\n        .appendChild(FlexItem.create()\n                .style()\n                .add(\"demo-flex-layout-block\")\n                .get()\n                .appendChild(h(4)))\n        .appendChild(FlexItem.create()\n                .style()\n                .add(\"demo-flex-layout-block\")\n                .get()\n                .appendChild(h(4)))\n        .appendChild(FlexItem.create()\n                .style()\n                .add(\"demo-flex-layout-block\")\n                .get()\n                .appendChild(h(4)))\n        .setDirection(FlexDirection.LEFT_TO_RIGHT);\n\nlayoutPlaygroundCard.appendChild(div()\n        .css(\"demo-flex-layout-result-container\")\n        .add(flexLayout)\n        .asElement());\n\n// ********* listeners part ********* //\ndirectionsRadioGroup.addChangeHandler(direction -> {\n    FlexDirection flexDirection = FlexDirection.valueOf(direction.getValue());\n    if (fillHeightCheckBox.isChecked() || isVerticalDirection(flexDirection)) {\n        flexLayout.style().add(\"fill-height\");\n    } else {\n        flexLayout.style().remove(\"fill-height\");\n    }\n    flexLayout.setDirection(flexDirection);\n});\n\nfillHeightCheckBox.addChangeHandler(value -> {\n    if (value) {\n        alignItemsRadioGroup.expand();\n        flexLayout.style().add(\"fill-height\");\n    } else {\n        alignItemsRadioGroup.collapse();\n        flexLayout.style().remove(\"fill-height\");\n    }\n});\n\njustifyContentRadioGroup.addChangeHandler(direction -> {\n    flexLayout.setJustifyContent(FlexJustifyContent.valueOf(direction.getValue()));\n});\n\nalignItemsRadioGroup.addChangeHandler(direction -> {\n    flexLayout.setAlignItems(FlexAlign.valueOf(direction.getValue()));\n});\n\nwrapRadioGroup.addChangeHandler(value -> {\n    flexLayout.setWrap(FlexWrap.valueOf(value.getValue()));\n});\n\nList<FlexItem> dynamicAddedItems = new ArrayList<>();\n\naddBlockButton.addClickListener(evt -> {\n    FlexItem item = FlexItem.create()\n            .style()\n            .add(\"demo-flex-layout-block\")\n            .get()\n            .appendChild(h(4));\n    flexLayout.appendChild(item);\n    dynamicAddedItems.add(item);\n});\n\nresetButton.addClickListener(evt -> {\n    for (FlexItem dynamicAddedItem : dynamicAddedItems) {\n        dynamicAddedItem.remove();\n    }\n    dynamicAddedItems.clear();\n});"]